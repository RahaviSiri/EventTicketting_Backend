services:
  # =====================
  # Eureka Service Registry
  # =====================
  service-registry:
    build: ./ServiceRegistry
    container_name: service-registry
    ports:
      - "8761:8761"
    networks:
      - eventnet

  # =====================
  # API Gateway
  # =====================
  api-gateway:
    build: ./API-Gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - service-registry
    environment:
      - spring.cloud.config.overrideNone=true
      - SPRING_APPLICATION_JSON={"eureka":{"client":{"serviceUrl":{"defaultZone":"http://service-registry:8761/eureka"}}}}
    networks:
      - eventnet

  # =====================
  # User Service
  # =====================
  user-service:
    build: ./UserService
    container_name: user-service
    ports:
      - "8087:8087"
    depends_on:
      - service-registry
      - postgres
      - kafka
    environment:
      - SPRING_APPLICATION_NAME=UserService
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/users_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Ravi12345
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - eventnet

  # =====================
  # Event Service
  # =====================
  event-service:
    build: ./EventServices
    container_name: event-service
    ports:
      - "8089:8089"
    depends_on:
      - service-registry
      - postgres
      - kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/events_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Ravi12345
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - eventnet

  # =====================
  # Seating Service
  # =====================
  seating-service:
    build: ./SeatingService
    container_name: seating-service
    ports:
      - "8088:8088"
    depends_on:
      - service-registry
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/seats_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Ravi12345
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka
    networks:
      - eventnet

  # =====================
  # Ticket Service
  # =====================
  ticket-service:
    build: ./TicketService
    container_name: ticket-service
    ports:
      - "8086:8086"
    depends_on:
      - service-registry
      - postgres
    environment:
      - SPRING_APPLICATION_NAME=TicketService
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/ticket_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Ravi12345
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka
    networks:
      - eventnet

  # =====================
  # Payment Service
  # =====================
  payment-service:
    build: ./PaymentService
    container_name: payment-service
    ports:
      - "8085:8085"
    depends_on:
      - service-registry
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/payment_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Ravi12345
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka
    networks:
      - eventnet

  # =====================
  # Discount Service
  # =====================
  discount-service:
    build: ./DiscountService
    container_name: discount-service
    ports:
      - "8090:8090"
    depends_on:
      - service-registry
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/discounts_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Ravi12345
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - TZ=Asia/Colombo
    networks:
      - eventnet

  # =====================
  # Order Service
  # =====================
  order-service:
    build: ./OrderService
    container_name: order-service
    ports:
      - "8091:8091"
    depends_on:
      - service-registry
      - postgres
      - kafka
    environment:
      - SPRING_APPLICATION_NAME=OrderService
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/order_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Ravi12345
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_CLOUD_OPENFEIGN_DISCOVERY_ENABLED=true
      - SPRING_CLOUD_LOADBALANCER_RETRY_ENABLED=true
    networks:
      - eventnet

  # =====================
  # Notification Service
  # =====================
  notification-service:
    build: ./NotificationService1
    container_name: notification-service
    ports:
      - "8092:8092"
    depends_on:
      - service-registry
      - kafka
    environment:
      - SPRING_MAIL_ID=${SPRING_MAIL_ID}
      - SPRING_MAIL_PASS=${SPRING_MAIL_PASS}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_CLOUD_OPENFEIGN_DISCOVERY_ENABLED=true
      - SPRING_CLOUD_LOADBALANCER_RETRY_ENABLED=true
    networks:
      - eventnet

  # =====================
  # PostgreSQL
  # =====================
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Ravi12345
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres-init:/docker-entrypoint-initdb.d
    networks:
      - eventnet

  # =====================
  # Zookeeper
  # =====================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - eventnet

  # =====================
  # Kafka
  # =====================
  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    ports:
      - "9094:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - eventnet

# =====================
# Networks and Volumes
# =====================
networks:
  eventnet:
    driver: bridge

volumes:
  postgres_data:
