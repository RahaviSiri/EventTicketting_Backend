spring.application.name=${SPRING_APPLICATION_NAME:OrderService}

# Render assigns dynamic ports â€” never hardcode
server.port=${PORT:8091}

# --- Eureka Configuration ---
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# --- Feign & Discovery ---
spring.cloud.openfeign.discovery.enabled=true
spring.cloud.loadbalancer.retry.enabled=true
logging.level.org.springframework.cloud.openfeign=DEBUG
logging.level.com.SpringBoot.OrderService.services=DEBUG

# --- Database (Render PostgreSQL) ---
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# --- Kafka (Aiven Cloud) ---
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.properties.security.protocol=${SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL:SASL_SSL}
spring.kafka.properties.sasl.mechanism=${SPRING_KAFKA_PROPERTIES_SASL_MECHANISM:PLAIN}
spring.kafka.properties.sasl.jaas.config=${SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG}
spring.kafka.properties.ssl.truststore.type=PEM
spring.kafka.properties.ssl.truststore.certificates=${SPRING_KAFKA_PROPERTIES_SSL_TRUSTSTORE_CERTIFICATES}

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
