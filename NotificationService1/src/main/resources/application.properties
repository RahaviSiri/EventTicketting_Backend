spring.application.name=${SPRING_APPLICATION_NAME:NotificationService}

# =====================================================
# Server Configuration (Dynamic for Render)
# =====================================================
server.port=${PORT:8092}

# =====================================================
# Eureka Configuration
# =====================================================
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true

# ==========================
#  SMTP Email Configuration (SendGrid)
# ==========================
# spring.mail.host=${SPRING_MAIL_HOST:smtp.sendgrid.net}
# spring.mail.port=${SPRING_MAIL_PORT:587}
# spring.mail.username=${SPRING_MAIL_USERNAME:apikey}
# spring.mail.password=${SENDGRID_API_KEY}
# spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH:true}
# spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE:true}
# spring.mail.properties.mail.debug=true
spring.mail.from=${SPRING_MAIL_FROM:rahavi24siri@gmail.com}

# =====================================================
# Kafka Configuration (Aiven Cloud Kafka)
# =====================================================
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id=notification-service
spring.kafka.consumer.auto-offset-reset=earliest

# SSL / SASL for Aiven (your environment already defines these)
spring.kafka.properties.security.protocol=${SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL:SASL_SSL}
spring.kafka.properties.sasl.mechanism=${SPRING_KAFKA_PROPERTIES_SASL_MECHANISM:PLAIN}
spring.kafka.properties.sasl.jaas.config=${SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG}
spring.kafka.properties.ssl.truststore.type=${SPRING_KAFKA_PROPERTIES_SSL_TRUSTSTORE_TYPE:PEM}
spring.kafka.properties.ssl.truststore.certificates=${SPRING_KAFKA_PROPERTIES_SSL_TRUSTSTORE_CERTIFICATES}

# Serializer / Deserializer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# =====================================================
# Reminder Scheduling
# =====================================================
reminder.check.interval=0 0 0 * * *   

# =====================================================
# Feign Client Discovery (for inter-service communication)
# =====================================================
spring.cloud.openfeign.discovery.enabled=false
ticket.service.url=https://ticket-service-77yu.onrender.com
user.service.url=https://user-service-l426.onrender.com
# spring.cloud.loadbalancer.retry.enabled=${SPRING_CLOUD_LOADBALANCER_RETRY_ENABLED:true}

# =====================================================
# Spring Profile
# =====================================================
spring.profiles.active=${SPRING_PROFILES_ACTIVE:prod}

